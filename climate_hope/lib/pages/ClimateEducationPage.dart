import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';

// --- Placeholder for TopicDetailPage ---
// This page displays the detailed content for each educational topic.
// In a larger application, you might place this in its own file
// (e.g., lib/pages/topic_detail_page.dart) and import it.
class TopicDetailPage extends StatelessWidget {
  final String topicTitle;
  final String topicContent;

  const TopicDetailPage({
    super.key,
    required this.topicTitle,
    required this.topicContent,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(
          topicTitle,
          style: GoogleFonts.lato(
            fontWeight: FontWeight.bold,
            color: Colors.white,
            fontSize: 24,
          ),
        ),
        centerTitle: true,
        backgroundColor: const Color.fromARGB(255, 62, 218, 134), // Main green
        elevation: 0,
      ),
      body: Container(
        decoration: const BoxDecoration(
          gradient: LinearGradient(
            begin: Alignment.topLeft,
            end: Alignment.bottomRight,
            colors: [
              Color.fromARGB(255, 120, 230, 180), // Lighter green
              Color.fromARGB(255, 62, 218, 134), // Main green
              Color.fromARGB(255, 1, 89, 46), // Darker green
            ],
          ),
        ),
        child: SingleChildScrollView(
          padding: const EdgeInsets.all(20.0),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Card(
                elevation: 5,
                shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(15)),
                color: Colors.white.withOpacity(0.95), // Slightly transparent white for content
                child: Padding(
                  padding: const EdgeInsets.all(20.0),
                  child: Text(
                    topicContent,
                    style: GoogleFonts.lato(
                      fontSize: 18,
                      color: Colors.grey[800],
                      height: 1.5,
                    ),
                  ),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
// --- End of TopicDetailPage Placeholder ---


// --- Climate Education Page ---
class ClimateEducationPage extends StatelessWidget {
   ClimateEducationPage({super.key});

  // Data for the educational topics, including content for detail pages
  final List<Map<String, dynamic>> educationTopics = const [
    {
      "title": "The Greenhouse Effect",
      "icon": Icons.eco_outlined,
      "content":
          "The greenhouse effect is a natural process that warms the Earth's surface. When the Sun's energy reaches the Earth's atmosphere, some of it is reflected back to space and the rest is absorbed and re-radiated by greenhouse gases like CO2, methane, and water vapor. This traps heat and keeps our planet warm enough to sustain life. However, human activities are increasing the concentration of these gases, leading to an enhanced greenhouse effect and global warming."
    },
    {
      "title": "Renewable Energy",
      "icon": Icons.lightbulb_outline,
      "content":
          "Renewable energy sources are natural resources that replenish themselves over relatively short periods and don't run out. Key examples include solar power (from the sun), wind power (from wind turbines), hydropower (from moving water), geothermal energy (from Earth's internal heat), and biomass (from organic matter). Shifting to renewables is crucial for reducing greenhouse gas emissions and combating climate change."
    },
    {
      "title": "Carbon Footprint",
      "icon": Icons.gas_meter, // Note: Icons.footprint might require 'material-symbols-rounded' font. Use Icons.cloud_outlined as a fallback if not configured.
      "content":
          "Your carbon footprint is the total amount of greenhouse gases (including carbon dioxide and methane) that are generated by your actions. It's often expressed as tons of CO2 equivalent. Everything from the food you eat, the clothes you buy, the way you travel, and the energy you use contributes to your carbon footprint. Understanding and reducing your footprint is a key personal action against climate change."
    },
    {
      "title": "Climate Adaptation",
      "icon": Icons.landscape,
      "content":
          "Climate adaptation refers to adjustments in natural or human systems in response to actual or expected climatic stimuli or their effects, which moderates harm or exploits beneficial opportunities. Examples include building sea walls, developing drought-resistant crops, improving early warning systems for extreme weather, and conserving water resources. Adaptation is necessary because some level of climate change is already unavoidable."
    },
    {
      "title": "Climate Mitigation",
      "icon": Icons.nature,
      "content":
          "Climate mitigation refers to actions taken to reduce or prevent the emission of greenhouse gases (GHGs) into the atmosphere, or to enhance their absorption by carbon sinks. The goal is to lessen the severity of global warming. Common strategies include transitioning to renewable energy, improving energy efficiency, adopting sustainable land use practices, and implementing carbon capture technologies."
    },
    {
      "title": "Sustainable Living",
      "icon": Icons.eco,
      "content":
          "Sustainable living is a lifestyle that attempts to reduce an individual's or society's use of Earth's natural resources and personal resources. Its practitioners often attempt to reduce their carbon footprint by altering methods of transportation, energy consumption, and diet. It's about meeting the needs of the present without compromising the ability of future generations to meet their own needs."
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(
          "Climate Education",
          style: GoogleFonts.lato(
            fontWeight: FontWeight.bold,
            color: Colors.white,
            fontSize: 24,
          ),
        ),
        centerTitle: true,
        backgroundColor: const Color.fromARGB(255, 62, 218, 134), // Main green
        elevation: 0,
      ),
      body: Container(
        decoration: const BoxDecoration(
          gradient: LinearGradient(
            begin: Alignment.topLeft,
            end: Alignment.bottomRight,
            colors: [
              Color.fromARGB(255, 120, 230, 180), // Lighter green
              Color.fromARGB(255, 62, 218, 134), // Main green
              Color.fromARGB(255, 1, 89, 46), // Darker green
            ],
          ),
        ),
        child: GridView.builder(
          padding: const EdgeInsets.all(16.0),
          gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
            crossAxisCount: 2, // Two cards per row
            childAspectRatio: 1.1, // Slightly taller cards to fit text
            crossAxisSpacing: 16,
            mainAxisSpacing: 16,
          ),
          itemCount: educationTopics.length,
          itemBuilder: (context, index) {
            final topic = educationTopics[index];
            return GestureDetector(
              onTap: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => TopicDetailPage(
                      topicTitle: topic["title"],
                      topicContent: topic["content"],
                    ),
                  ),
                );
              },
              child: Card(
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(15),
                ),
                elevation: 6,
                color: Colors.white, // Solid white for a clean look on top of gradient
                child: Padding(
                  padding: const EdgeInsets.all(12.0),
                  child: Column(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      Icon(
                        topic["icon"],
                        size: 50,
                        color: const Color.fromARGB(255, 1, 89, 46), // Dark green icon
                      ),
                      const SizedBox(height: 12),
                      Text(
                        topic["title"],
                        textAlign: TextAlign.center,
                        style: GoogleFonts.lato(
                          fontSize: 18,
                          fontWeight: FontWeight.bold,
                          color: const Color.fromARGB(255, 1, 39, 2), // Dark green text
                        ),
                      ),
                    ],
                  ),
                ),
              ),
            );
          },
        ),
      ),
    );
  }
}